# Configuration ##############################################################

set shell sh # interpreter for shell commands (needs to be POSIX compatible)
set shellopts '-eu' # Safer shell commands
set ifs "\n" # split $fs and $fx properly because default file sep is newline
set ratios 1:3:3 # set ratio of panes
set timefmt "2006-01-02 Mon 15:04" # set time format
#set color256 on # surn on colors
set previewer ~/.config/lf/preview.sh # previewer script
set scrolloff 10 # leave some space at the top and the bottom of the screen

set findlen 2
#set noanchorfind
set incsearch
#cmap <esc> cmd-enter
#cmap <enter> open


# Commands ###################################################################

# Move current file or selected files to trash folder
cmd trash ${{
    whiptail \
        --yesno "Are you sure you want to delete file(s)?" 10 35 --defaultno \
        && gio trash $fx
}}

# Creating a new directory or file
cmd mkfile %~/.config/lf/new.sh "$(echo $* | tr ' ' '\ ')"
cmd open ${{ ~/.config/lf/open.sh "$f" }}

# show disk usage
#cmd usage :echo !{{du -hs . | more}}<CR>

# Show directory in window title
cmd on-cd &{{
    # '&' commands run silently in background (which is what we want here),
    # but are not connected to stdout.
    # To make sure our escape sequence still reaches stdout we pipe it to /dev/tty
    printf "\033]0;  $(pwd | sed "s|$HOME|~|")\007" > /dev/tty
}}
on-cd # also run at startup

cmd fzf_jump ${{
    res="$(fdfind . ~ --type d --exec stat --printf='%Y\t%n\n' \
    | sort --numeric --reverse \
    | cut -f2- \
    | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ]; then
        cmd="cd"
    else
        cmd="select"
    fi
    lf -remote "send $id $cmd \"$res\""
}}
map gj :fzf_jump


# Keyboard mappings ##########################################################

map <esc> quit
map <enter> open
map ~ cd ~
map x trash
map X cd ~/.local/share/Trash
map a push :mkfile<space>
# map e $$EDITOR $f

# show documentation (overrides 'search-back' command)
map ? $lf -doc | less
