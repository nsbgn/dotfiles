[ids]

# Laptop keyboard
0001:0001

# Logitech USB receiver mouse
046d:c548

[global]
chord_timeout = 50
overload_tap_timeout = 300
oneshot_timeout = 1000
default_layout = qwerty_shifted
disable_modifier_guard = 1

# Shift left hand one key up; shift right hand two keys to the right and one 
# key up

[aliases]
space = L1
v = L2
c = L3
leftalt = L3

rightalt = R1
, = R1
. = R2
menu = R3
rightcontrol = R3

grave = TL1
1 = TL2
2 = TL3
3 = TL4
4 = TL5
5 = TL6
8 = TR1
9 = TR2
0 = TR3
- = TR4
= = TR5
backspace = TR6
tab = ML1
q = ML2
w = ML3
e = ML4
r = ML5
t = ML6
i = MR1
o = MR2
p = MR3
[ = MR4
] = MR5
\ = MR6
capslock = BL1
a = BL2
s = BL3
d = BL4
f = BL5
g = BL6
k = BR1
l = BR2
; = BR3
' = BR4
enter = BR5
rightshift = BR6

[qwerty_shifted:layout]
TL1 = tab
TL2 = q
TL3 = w
TL4 = e
TL5 = r
TL6 = t
TR1 = y
TR2 = u
TR3 = i
TR4 = o
TR5 = p
TR6 = backslash

ML1 = backspace
ML2 = a
ML3 = s
ML4 = d
ML5 = f
ML6 = g
MR1 = h
MR2 = j
MR3 = k
MR4 = l
MR5 = ;
MR6 = '

BL1 = oneshot(shift)
BL2 = z
BL3 = x
BL4 = c
BL5 = v
BL6 = b
BR1 = n
BR2 = m
BR3 = ,
BR4 = .
BR5 = /
BR6 = overload(shift, rightshift)

[colemakdhx_shifted:layout]
TL1 = tab
TL2 = q
TL3 = w
TL4 = f
TL5 = p
TL6 = b
TR1 = j
TR2 = l
TR3 = u
TR4 = y
TR5 = ;
TR6 = backslash

ML1 = backspace
ML2 = a
ML3 = r
ML4 = s
ML5 = t
ML6 = g
MR1 = m
MR2 = n
MR3 = e
MR4 = i
MR5 = o
MR6 = '

BL1 = oneshot(shift)
BL2 = z
BL3 = b
BL4 = c
BL5 = d
BL6 = x
BR1 = k
BR2 = h
BR3 = ,
BR4 = .
BR5 = /
BR6 = overload(shift, rightshift)

[main]
capslock = backspace
leftshift = oneshot(shift)
leftcontrol = overload(control, compose)
leftmeta = oneshot(alt)

# Thumb keys
L3 = overload(fnL, escape)
L2 = overload(fnL, enter)
L1 = space

R1 = oneshot(symbol)
R3 = overloadt2(fnR, enter, 150)

[empty]


[symbol]
leftshift = swap(shift)

TL2 = !
TL3 = [
TL4 = +
TL5 = #
TL6 = ]
TR1 = ^
TR2 = 7
TR3 = 8
TR4 = 9
TR5 = oneshotm(symbol2, .)
TR6 = @

ML2 = *
ML3 = (
ML4 = -
ML5 = =
ML6 = )
MR1 = ~
MR2 = 4
MR3 = 5
MR4 = 6
MR5 = 0
MR6 = grave

BL2 = &
BL3 = {
BL4 = $
BL5 = _
BL6 = }
BR1 = %
BR2 = 1
BR3 = 2
BR4 = 3
BR5 = /


[symbol2]
[ = macro(backspace :)


# TODO mirroring, complete
# [meta_control_alt:M-C-A]

# [control_alt:C-A]
# v = overload(meta_control_alt, C-A-v)

# [meta_control:M-C]
# x = overload(meta_control_alt, M-C-x)

# [meta_alt:M-A]
# c = overload(meta_control_alt, M-A-c)

[meta2:M]
# x = overload(meta_alt, M-x)
# c = overload(meta_control, M-c)

[altgr2:G]

[alt2:A]
# c = overload(control_alt, A-c)
# v = overload(meta_alt, A-v)

[control2:C]
# x = overload(control_alt, C-x)
# v = overload(meta_control, C-v)

# # [shift2:S]
# # x = overload(alt_shift, S-x)
# # c = overload(control_shift, S-c)
# # v = overload(meta_shift, S-v)

[fnL]
L1 = overload(fnR, rightmeta)

TL1 = delete
TL2 = pageup
TL3 = home
TL4 = up
TL5 = end
TL6 = pause

ML1 = backspace
ML2 = pagedown
ML3 = left
ML4 = down
ML5 = right
ML6 = scrolllock

BL1 = overload(shift)
BL2 = swapm(empty, compose)
BL3 = swap(alt2)
BL4 = swap(control2)
BL5 = swap(meta2)
BL6 = sysrq

TR1 = M-C-y
TR2 = M-C-u
TR3 = M-C-i
TR4 = M-C-o
TR5 = M-C-p
TR6 = M-C-[

MR1 = M-C-h
MR2 = M-C-j
MR3 = M-C-k
MR4 = M-C-l
MR5 = M-C-;
MR6 = M-C-'

BR1 = M-C-n
BR2 = M-C-m
BR3 = M-C-,
BR4 = M-C-.
BR5 = M-C-/

[fnR]
leftalt = overload(fnL, leftmeta)

TL1 = M-C-tab
TL2 = M-C-q
TL3 = M-C-w
TL4 = M-C-e
TL5 = M-C-r
TL6 = M-C-t

ML1 = M-C-backspace
ML2 = M-C-a
ML3 = M-C-s
ML4 = M-C-d
ML5 = M-C-f
ML6 = M-C-g

BL1 = M-C-leftshift
BL2 = M-C-z
BL3 = M-C-x
BL4 = M-C-c
BL5 = M-C-v
BL6 = M-C-b

TR1 = f7
TR2 = f8
TR3 = f9
TR4 = f10
TR5 = f11
TR6 = f12

MR1 = f1
MR2 = f2
MR3 = f3
MR4 = f4
MR5 = f5
MR6 = f6

BR1 = insert
BR2 = swap(meta2)
BR3 = swap(control2)
BR4 = swap(altgr2)
BR5 = capslock

# Layouts are very hard to accidentally toggle this way
[fnL+fnR]
L1 = setlayout(qwerty_shifted)
R1 = setlayout(colemakdhx_shifted)

leftshift = overload(shift2, rightshift)
x = overload(alt2, leftalt)
c = overload(control2, leftcontrol)
v = overload(meta2, leftmeta)

, = overload(meta, rightmeta)
. = overload(control2, rightcontrol)
/ = overload(altgr2, rightalt)

# Explicitly override the combination so that you can for example do C-+ 
# intuitively
# [fnL+symbol]
# leftshift = swap(shift2)
# z = M-C-&
# x = swap(alt2)
# c = swap(control2)
# v = swap(meta2)

# q = M-C-!
# w = M-C-[
# e = M-C-+
# r = M-C-#
# t = M-C-]

# u = M-C-^
# i = M-C-7
# o = M-C-8
# p = M-C-9
# [ = M-C-.
# ] = M-C-@

# a = M-C-*
# s = M-C-(
# d = M-C--
# f = M-C-=
# g = M-C-)

# j = M-C-~
# k = M-C-4
# l = M-C-5
# ; = M-C-6
# ' = M-C-0
# enter = M-C-grave

# b = M-C-}

# m = M-C-%
# , = M-C-1
# . = M-C-2
# / = M-C-3
# rightshift = M-C-/
