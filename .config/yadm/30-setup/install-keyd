#!/bin/sh
# keyd - Keyboard remapper

# SOURCE: https://github.com/rvaiya/keyd
# ALPINE: https://pkgs.alpinelinux.org/package/edge/community/x86_64/keyd
# DEBIAN: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1060023
set -eu

if ! which keyd > /dev/null; then
    mkdir -p ~/.builds
    sudo apt install -y make gcc libudev-dev
    git clone https://github.com/rvaiya/keyd ~/.builds/keyd
    cd ~/.builds/keyd
    make
    sudo make install
    sudo systemctl enable keyd
    sudo systemctl start keyd
fi

# also set setxkbmap -option compose:menu
# <https://gist.githubusercontent.com/rvaiya/be31f42049a4b5ad46666a8e120d9843/>
# <https://cgit.freedesktop.org/xorg/proto/x11proto/tree/XF86keysym.h>
#
echo "Updating keyd config..." >&2
sudo mkdir -p /etc/keyd
sudo tee /etc/keyd/default.conf > /dev/null <<EOF
[ids]

# Microsoft Keyboard
045e:07a5
# Laptop keyboard
0001:0001

[global]
chord_timeout = 50
overload_tap_timeout = 300
oneshot_timeout = 1000
default_layout = qwerty_shifted
disable_modifier_guard = 1

[qwerty_shifted:layout]
# Shift right hand one key to the right
y = noop
u = y
i = u
o = i
p = o
[ = p
] = backslash

h = noop
j = h
k = j
l = k
; = l
' = ;
enter = '

z = z
x = x

# ...
n = noop
m = n
, = m
. = ,
/ = .
rightshift = /

[colemakdh_shifted:layout]
q = q
w = w
e = f
r = p
t = b
u = j
i = l
o = u
p = y
[ = ;
] = backslash

a = a
s = r
d = s
f = t
g = g
j = m
k = n
l = e
; = i
' = o
enter = '

z = z
x = x
c = c
v = d
b = v
m = k
, = h
. = ,
/ = .
rightshift = /


[main]
capslock = backspace
leftshift = overload(shift, oneshot(shifto))
leftcontrol = overload(control, compose)
leftmeta = oneshot(alt)

# Thumb keys
leftalt = overload(fnL, escape)
rightalt = oneshot(symbol)
compose = overloadt2(fnR, enter, 150)
rightcontrol = overloadt2(fnR, enter, 150)

# Oneshot shouldn't apply to mouse clicks except when you're still actually 
# holding the activating key
# TODO: Doesn't work?
[shifto:S]
leftmouse = leftmouse
middlemouse = middlemouse
rightmouse = rightmouse

[empty]


[symbol]
leftshift = swap(shift)
q = !
w = [
e = +
r = #
t = ]

u = ^
i = 7
o = 8
p = 9
[ = oneshotm(symbol2, .)
] = @

a = *
s = (
d = -
f = =
g = )

j = ~
k = 4
l = 5
; = 6
' = 0
enter = grave

z = &
x = {
c = $
v = _
b = }

m = %
, = 1
. = 2
/ = 3
rightshift = /


[symbol2]
[ = macro(backspace :)


# TODO mirroring
[shift2:S]
z = overload(meta_shift, S-z)
x = overload(alt_shift, S-x)
c = overload(control_shift, S-c)

[meta2:M]
x = overload(meta_alt, M-x)
c = overload(meta_control, M-c)

[alt2:A]
z = overload(meta_alt, A-z)
c = overload(control_alt, A-c)

[control2:C]
z = overload(meta_control, C-z)
x = overload(control_alt, C-x)

[control_alt:C-A]
z = overload(meta_control_alt, C-A-z)

[meta_control:M-C]
x = overload(meta_control_alt, M-C-x)

[meta_alt:M-A]
c = overload(meta_control_alt, M-A-c)

[meta_control_alt:M-C-A]

[fnL]
rightcontrol = overload(fnR, rightmeta)
compose = overload(fnR, rightmeta)

tab = delete
q = home
w = up
e = end
r = pageup

capslock = backspace
a = left
s = down
d = right
f = pagedown

leftshift = overload(shift, oneshot(shifto))
z = swap(meta2)
x = swap(alt2)
c = swap(control2)
v = swapm(empty, compose)

# , = swap(shift2)
# . = swap(control2)
# / = swap(alt2)
# rightshift = oneshot(meta2)

u = M-C-y
i = M-C-u
o = M-C-i
p = M-C-o
[ = M-C-p
] = M-C-[

j = M-C-h
k = M-C-j
l = M-C-k
; = M-C-l
apostrophe = M-C-;
enter = M-C-'

m = M-C-n
, = M-C-m
. = M-C-,
/ = M-C-.
rightshift = M-C-/

' = macro(esc ;)

[fnR]
leftalt = overload(fnL, leftmeta)

# scrolllock, capslock, insert, sysrq, pause

tab = M-C-tab
q = M-C-q
w = M-C-w
e = M-C-e
r = M-C-r

capslock = M-C-backspace
a = M-C-a
s = M-C-s
d = M-C-d
f = M-C-f

z = M-C-z
x = M-C-x
c = M-C-c
v = M-C-v

u = f7
i = f8
o = f9
p = f10
[ = f11
] = f12

j = f1
k = f2
l = f3
; = f4
apostrophe = f5
enter = f6

m = sysrq
, = pause
. = swap(control2)
/ = swap(alt2)
rightshift = swap(meta2)


# Layouts are very hard to accidentally toggle this way
[fnL+fnR]
space = setlayout(qwerty_shifted)
rightalt = setlayout(colemakdh_shifted)

leftshift = overload(shift2, rightshift)
z = overload(meta2, leftmeta)
x = overload(alt2, leftalt)
c = overload(control2, leftcontrol)

. = overload(control2, rightcontrol)
/ = overload(alt2, rightalt)
rightshift = overload(meta, rightmeta)

# Explicitly override the combination so that you can for example do C-+ 
# intuitively
[fnL+symbol]
leftshift = swap(shift2)
z = swap(meta2)
x = swap(alt2)
c = swap(control2)
v = M-compose

q = M-!
w = M-[
e = M-+
r = M-#
t = M-]

u = M-^
i = M-7
o = M-8
p = M-9
[ = M-.
] = M-@

a = M-*
s = M-(
d = M--
f = M-=
g = M-)

j = M-~
k = M-4
l = M-5
; = M-6
' = M-0
enter = M-grave

b = M-}

m = M-%
, = M-1
. = M-2
/ = M-3
rightshift = M-/

[extra]
# XF86WLAN / 0xf6. See also rfkill for XF86RFKill
tab = wlan
# XF86AudioPrev
q = previoussong
# XF86AudioRaiseVolume
w = volumeup
# XF86AudioNext
e = nextsong
# XF86AudioStop
r = stopcd
# XF86MonBrightnessUp
t = brightnessup

# XF86TouchpadToggle
capslock = f21
# XF86AudioRewind
a = rewind
# XF86AudioLowerVolume
s = volumedown
# XF86AudioForward
d = fastforward
# XF86AudioPlay
f = playpause
# XF86KbdBrightnessDown
g = brightnessdown

# XF86Bluetooth / 0xf5
leftshift = bluetooth
# XF86AudioMicMute
z = f20
# XF86AudioMute
x = mute
# XF86AudioPreset / 0xdd
c = sound
# XF86AudioRecord
v = record
b = noop


EOF

sudo keyd reload
