#!/bin/sh
# Enable file-level encryption on login using `fscrypt`.
#
# For device-level encryption on Linux, use dm-crypt; for cross-platform
# device-level encryption, use VeraCrypt.
#
# <https://wiki.debian.org/TransparentEncryptionForHomeFolder>
# <https://www.rohanjain.in/fscrypt/>
# <https://wiki.archlinux.org/title/Fscrypt#Encrypt_a_home_directory>
# <https://www.linuxinsider.com/story/get-no-fuss-file-level-crypto-with-fscrypt-86953.html>
# <https://github.com/google/fscrypt>
# <https://wiki.archlinux.org/title/Fscrypt>
# <https://wiki.archlinux.org/title/PAM>
# <https://wiki.gentoo.org/wiki/PAM>
#
# Alternatively, consider:
# <https://wiki.archlinux.org/title/gocryptfs>
# <https://github.com/rfjakob/gocryptfs/wiki/Mounting-on-login-using-pam_mount>

set -eu

echo "Starting script to encrypt $HOME with fscrypt." >&2

# Make sure that $HOME is not yet encrypted
if fscrypt status "$HOME"; then
    echo "$HOME is already encrypted." >&2
    exit 0
fi

# Make sure that fscrypt et al are installed
if ! which fscrypt; then
    sudo apt-get install -y fscrypt libpam-fscrypt e2fsprogs util-linux
fi

if test $(id -u) -ne 0; then
    echo "ERROR: This script must run as root." >&2
    exit 1
fi

TARGET_USER=$1
if test -z "$TARGET_USER"; then
    TARGET_USER=nsbg
fi

# Make sure that there are no non-hidden files in $HOME
if ! -z "$(ls "$HOME")" || exit 1

# Find device on which $HOME is mounted
DEV=$(findmnt -n -o SOURCE --target "$HOME")

# Make sure it is formatted as ext4
test $(findmnt -n --source "$DEV" -o fstype) == "ext4" || exit 1

# Enable `encrypt` feature flag on the device and set up encryption
sudo tune2fs -O encrypt "$DEV"
sudo fscrypt setup

# Debian installs defaults for fscrypt here
test -e /usr/share/pam-configs/fscrypt
sudo pam-auth-update

# Encrypt a new directory
CRYPT=/home/$USER.crypt
sudo mkdir "$CRYPT"
sudo chown $USER:$USER "$CRYPT"
sudo fscrypt encrypt "$CRYPT" --user=$USER --source=pam_passphrase

# ... That's all.
# fscrypt lock /home/$USER --user=$USER
